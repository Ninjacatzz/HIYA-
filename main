import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.input.KeyCombination;
import javafx.scene.shape.*;
import javafx.scene.layout.Pane;
import javafx.scene.text.Text;
import javafx.scene.paint.Color;

import javafx.event.EventHandler;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.KeyCode;
import javafx.animation.FadeTransition;
import javafx.animation.FillTransition;
import javafx.animation.TranslateTransition;
import javafx.util.Duration;

import java.awt.event.ActionListener;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;

public class Main extends Application {
	//Map
	public static Rectangle map = new Rectangle(600, 350);
	//P1
	public static Rectangle p1 = new Rectangle(50, 50);
	//P2
	public static Rectangle p2 = new Rectangle(50, 50);
	//Pane
	public static Pane root = new Pane();
	//TranslateTransition Variable
	public static TranslateTransition transition = new TranslateTransition();
	//FillTransition Variable
	public static FillTransition fTransition = new FillTransition();
	
	@Override
	public void start(Stage primaryStage) {
		//Scene
		Scene scene = new Scene(root, 900, 600);

		// Application Title
		primaryStage.setScene(scene);
		primaryStage.setTitle("HIYA!");
		primaryStage.show();

		// Key Numbers
		int mapCenter = 250;
		int screenCenter = (int) scene.getWidth() / 2;
		int p1Center = 100;
		int p2Center = 800;

		// Map Location
		map.setLayoutX(screenCenter - map.getWidth() / 2);
		map.setLayoutY(mapCenter - map.getHeight() / 2);
		root.getChildren().add(map);
		map.setFill(Color.TRANSPARENT);
		map.setStroke(Color.BLACK);
		map.setStrokeWidth(2);

		// Player 1 Start Position
		p1.setLayoutX(p1Center - p1.getWidth() / 2);
		p1.setLayoutY(mapCenter - p1.getHeight() / 2);
		root.getChildren().add(p1);
		p1.setFill(Color.RED);
		int p1Pos = (int) p1.getLayoutY();

		// Player 2 Start Position
		p2.setLayoutX(p2Center - p2.getWidth() / 2);
		p2.setLayoutY(mapCenter - p2.getHeight() / 2);
		root.getChildren().add(p2);
		p2.setFill(Color.BLUE);
		int p2Pos = (int) p2.getLayoutY();

		// lives
		int p1Lives = 3;
		int p2Lives = 3;

		// lives locations
		Rectangle p1Lives1 = new Rectangle(30, 30);
		p1Lives1.setLayoutX(map.getLayoutX());
		p1Lives1.setLayoutY(map.getLayoutY() + map.getHeight() + 5);
		root.getChildren().add(p1Lives1);
		p1Lives1.setFill(Color.GREY);

		Rectangle p1Lives2 = new Rectangle(30, 30);
		p1Lives2.setLayoutX(p1Lives1.getLayoutX() + p1Lives2.getWidth() + 5);
		p1Lives2.setLayoutY(map.getLayoutY() + map.getHeight() + 5);
		root.getChildren().add(p1Lives2);
		p1Lives2.setFill(Color.GREY);

		Rectangle p1Lives3 = new Rectangle(30, 30);
		p1Lives3.setLayoutX(p1Lives2.getLayoutX() + p1Lives3.getWidth() + 5);
		p1Lives3.setLayoutY(map.getLayoutY() + map.getHeight() + 5);
		root.getChildren().add(p1Lives3);
		p1Lives3.setFill(Color.GREY);

		Rectangle p2Lives1 = new Rectangle(30, 30);
		p2Lives1.setLayoutX(map.getLayoutX() + map.getWidth() - p2Lives1.getWidth());
		p2Lives1.setLayoutY(map.getLayoutY() + map.getHeight() + 5);
		root.getChildren().add(p2Lives1);
		p2Lives1.setFill(Color.GREY);

		Rectangle p2Lives2 = new Rectangle(30, 30);
		p2Lives2.setLayoutX(p2Lives1.getLayoutX() - p2Lives2.getWidth() - 5);
		p2Lives2.setLayoutY(map.getLayoutY() + map.getHeight() + 5);
		root.getChildren().add(p2Lives2);
		p2Lives2.setFill(Color.GREY);

		Rectangle p2Lives3 = new Rectangle(30, 30);
		p2Lives3.setLayoutX(p2Lives2.getLayoutX() - p2Lives3.getWidth() - 5);
		p2Lives3.setLayoutY(map.getLayoutY() + map.getHeight() + 5);
		root.getChildren().add(p2Lives3);
		p2Lives3.setFill(Color.GREY);

		
		scene.addEventHandler(KeyEvent.KEY_PRESSED, event -> {		
			// Move Up (P1) Event Handler
			if (event.getCode() == KeyCode.W) {
				p1.setTranslateY(-5);
			}
			// Move Down (P1) Event Handler
			if (event.getCode() == KeyCode.S) {
				p1.setTranslateY(5);
			}
			// Move Up (P2) Event Handler
			if (event.getCode() == KeyCode.UP) {
				p2.setTranslateY(-5);
			}
			// Move Down (P2) Event Handler
			if (event.getCode() == KeyCode.DOWN) {
				p2.setTranslateY(5);
			}
			// Player 1 Bullet Event Handler
			if (event.getCode() == KeyCode.D) {
				p1Bullet(p1.getLayoutY() + p1.getHeight() / 2);
			}
			// Player 2 Bullet Event Handler
			if (event.getCode() == KeyCode.LEFT) {
				p2Bullet(p2.getLayoutY() + p2.getHeight() / 2);
			}
		});
	}

	public static void p1Bullet(double position) {
		Rectangle p1Bullet = new Rectangle(30, 30);
		p1Bullet.setLayoutX(map.getLayoutX());
		p1Bullet.setLayoutY(position - p1Bullet.getHeight() / 2);
		p1Bullet.setFill(Color.BLACK);
		root.getChildren().add(p1Bullet);
		
//		while(p1Bullet.getLayoutX() < (p2.getLayoutX() + p2.getWidth()/2)) {
//			p1Bullet.setTranslateX(1);
//		}
		transition.setDuration(Duration.seconds(1));
		transition.setNode(p1Bullet);
		transition.setToX((p2.getLayoutX() + p2.getWidth()/2) - p1Bullet.getWidth()/2 - p1Bullet.getLayoutX());
		transition.play();
		if(p1Bullet.getLayoutX() >= (p2.getLayoutX() + p2.getWidth()/2) - p1Bullet.getWidth()/2 - p1Bullet.getLayoutX()) {
			System.out.println(p1Bullet.getLayoutX());
			transition.stop();
			p1Bullet.setFill(Color.TRANSPARENT);
			root.getChildren().remove(p1Bullet);
		}
	}
	
	public static void p2Bullet(double position) {
		Rectangle p2Bullet = new Rectangle(30, 30);
		p2Bullet.setLayoutX(map.getLayoutX()+map.getWidth());
		p2Bullet.setLayoutY(position - p2Bullet.getHeight() / 2);
		p2Bullet.setFill(Color.BLACK);
		root.getChildren().add(p2Bullet);
		
		transition.setDuration(Duration.seconds(1));
		transition.setNode(p2Bullet);
		transition.setToX((p1.getLayoutX() + p1.getWidth()/2) - p2Bullet.getWidth()/2 - p2Bullet.getLayoutX());
		transition.play();
		if(p2Bullet.getLayoutX() == (p1.getLayoutX() + p1.getWidth()/2) - p2Bullet.getWidth()/2 - p2Bullet.getLayoutX()) {
			root.getChildren().remove(p2Bullet);
		}
	}

	public static void main(String[] args) {
		launch(args);
	}
}
